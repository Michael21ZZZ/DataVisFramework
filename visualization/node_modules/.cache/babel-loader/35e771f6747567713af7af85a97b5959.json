{"ast":null,"code":"var _jsxFileName = \"/Users/ZHANGRY/Codes/17514/hw6-analytics-framework-tp-link/visualization/src/plugins/TreeMapPlugin.tsx\";\nimport React from 'react';\nimport './TreeMapPlugin.css';\nimport Plot from 'react-plotly.js';\nfunction TreeMapPlugin() {\n  var name = \"TreeMap\";\n  return {\n    getName: function getName() {\n      return name;\n    },\n    getContent: function getContent(resume) {\n      // Copied from NLTK\n      var stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'within'];\n      var labels = new Array();\n      var parents = new Array();\n      for (var i = 0; i < resume.experiences.length; i++) {\n        var organization = resume.experiences[i].title;\n        var description = resume.experiences[i].description;\n        var flatDescription = description.join(' ');\n        flatDescription = flatDescription.replace(/[,.:]/g, '');\n        var splitDescription = flatDescription.split(' ');\n        var existedWords = [];\n        var frequency = new Map();\n        for (var j = 0; j < splitDescription.length; j++) {\n          var word = splitDescription[j];\n          if (!stopwords.includes(word)) {\n            if (!existedWords.includes(word)) {\n              frequency.set(word, 1);\n              existedWords.push(word);\n            } else {\n              frequency.set(word, frequency.get(word) + 1);\n            }\n          }\n        }\n        if (organization !== null) {\n          (function () {\n            if (labels.includes(organization)) {\n              labels.push('');\n            } else {\n              labels.push(organization);\n            }\n            parents.push('');\n            var sorted = Array.from(frequency).sort(function (a, b) {\n              return b[1] - a[1];\n            });\n            var top5 = [];\n            sorted.forEach(function (value) {\n              return top5.push(value[0]);\n            });\n            top5 = top5.slice(0, 5);\n            for (var k = 0; k < top5.length; k++) {\n              labels.push(top5[k]);\n              parents.push(organization);\n            }\n          })();\n        }\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TreeMapPlugin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"treemap-title-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"treemap-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"M Y\\xA0\\xA0\\xA0E X P E R I E N C E\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Plot, {\n        data: [{\n          type: \"treemap\",\n          labels: labels,\n          parents: parents\n        }],\n        layout: {\n          width: 900,\n          height: 600,\n          padding: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n}\nexport default TreeMapPlugin;","map":{"version":3,"names":["React","Plot","TreeMapPlugin","name","getName","getContent","resume","stopwords","labels","Array","parents","i","experiences","length","organization","title","description","flatDescription","join","replace","splitDescription","split","existedWords","frequency","Map","j","word","includes","set","push","get","sorted","from","sort","a","b","top5","forEach","value","slice","k","type","width","height","padding"],"sources":["/Users/ZHANGRY/Codes/17514/hw6-analytics-framework-tp-link/visualization/src/plugins/TreeMapPlugin.tsx"],"sourcesContent":["import React from 'react';\nimport './TreeMapPlugin.css';\nimport PersonalPagePlugin from '../framework/PersonalPagePlugin';\nimport Resume from '../framework/Resume';\nimport Plot from 'react-plotly.js';\n\n\n\nfunction TreeMapPlugin(): PersonalPagePlugin {\n    const name: string = \"TreeMap\"\n\n    return {\n        getName(): string {\n            return name;\n        },\n\n        getContent(resume: Resume): JSX.Element {\n            // Copied from NLTK\n            const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our',\n                'ours', 'ourselves', 'you', 'your', 'yours',\n                'yourself', 'yourselves', 'he', 'him',\n                'his', 'himself', 'she', 'her', 'hers',\n                'herself', 'it', 'its', 'itself', 'they',\n                'them', 'their', 'theirs', 'themselves',\n                'what', 'which', 'who', 'whom', 'this',\n                'that', 'these', 'those', 'am', 'is',\n                'are', 'was', 'were', 'be', 'been',\n                'being', 'have', 'has', 'had',\n                'having', 'do', 'does', 'did', 'doing',\n                'a', 'an', 'the', 'and', 'but', 'if', 'or',\n                'because', 'as', 'until', 'while', 'of', 'at',\n                'by', 'for', 'with', 'about', 'against', 'between',\n                'into', 'through', 'during', 'before', 'after', 'above',\n                'below', 'to', 'from', 'up', 'down',\n                'in', 'out', 'on', 'off', 'over', 'under',\n                'again', 'further', 'then', 'once', 'here',\n                'there', 'when', 'where', 'why', 'how', 'all',\n                'any', 'both', 'each', 'few', 'more', 'most',\n                'other', 'some', 'such', 'no', 'nor', 'not',\n                'only', 'own', 'same', 'so', 'than', 'too',\n                'very', 's', 't', 'can', 'will', 'just',\n                'don', 'should', 'now', 'within']\n\n            const labels = new Array()\n            const parents = new Array()\n\n            for (let i = 0; i < resume.experiences.length; i++) {\n                let organization = resume.experiences[i].title\n                let description = resume.experiences[i].description\n                let flatDescription = description.join(' ')\n                flatDescription = flatDescription.replace(/[,.:]/g, '')\n                let splitDescription = flatDescription.split(' ')\n                let existedWords: string[] = []\n                let frequency: Map<string, any> = new Map<string, any>();\n\n                for (let j = 0; j < splitDescription.length; j++) {\n                    var word = splitDescription[j]\n                    if (!stopwords.includes(word)) {\n                        if (!existedWords.includes(word)) {\n                            frequency.set(word, 1)\n                            existedWords.push(word)\n                        } else {\n                            frequency.set(word, frequency.get(word) + 1)\n                        }\n                    }\n                }\n\n                if (organization !== null) {\n                    if (labels.includes(organization)) {\n                        labels.push('')\n                    } else {\n                        labels.push(organization)\n                    }\n                    parents.push('')\n                    let sorted = Array.from(frequency).sort((a,b) => b[1] - a[1])\n                    let top5: string[] = []\n                    sorted.forEach(value => top5.push(value[0]))\n                    top5 = top5.slice(0,5)\n                    for (let k=0; k<top5.length; k++) {\n                        labels.push(top5[k])\n                        parents.push(organization)\n                    }\n                }\n                \n            }\n\n\n            return (\n                <div className='TreeMapPlugin'>\n                    <div className='treemap-title-container'>\n                        <p className='treemap-title'>M Y&nbsp;&nbsp;&nbsp;E X P E R I E N C E&nbsp;&nbsp;&nbsp;</p>\n                    </div>\n                    <Plot\n                        data={[\n                            {\n                                type: \"treemap\",\n                                labels: labels,\n                                parents: parents\n                          }\n                        ]}\n                        layout={ {width: 900, height: 600, padding: 1} }\n                    />\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default TreeMapPlugin;"],"mappings":"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"},"metadata":{},"sourceType":"module"}